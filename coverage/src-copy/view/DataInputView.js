/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['view/DataInputView.js']) {
  _$jscoverage['view/DataInputView.js'] = [];
  _$jscoverage['view/DataInputView.js'][1] = 0;
  _$jscoverage['view/DataInputView.js'][9] = 0;
  _$jscoverage['view/DataInputView.js'][19] = 0;
  _$jscoverage['view/DataInputView.js'][23] = 0;
  _$jscoverage['view/DataInputView.js'][24] = 0;
  _$jscoverage['view/DataInputView.js'][28] = 0;
  _$jscoverage['view/DataInputView.js'][29] = 0;
  _$jscoverage['view/DataInputView.js'][31] = 0;
  _$jscoverage['view/DataInputView.js'][37] = 0;
  _$jscoverage['view/DataInputView.js'][40] = 0;
}
_$jscoverage['view/DataInputView.js'].source = ["define<span class=\"k\">([</span>","\t<span class=\"c\">// lib</span>","\t<span class=\"s\">\"backbone\"</span><span class=\"k\">,</span>","\t<span class=\"c\">// model</span>","\t<span class=\"s\">\"model/Person\"</span><span class=\"k\">,</span>","\t<span class=\"c\">// template</span>","\t<span class=\"s\">\"text!template/dataInputView.tmpl\"</span>","<span class=\"k\">],</span> <span class=\"k\">function</span> <span class=\"k\">(</span>Backbone<span class=\"k\">,</span> Person<span class=\"k\">,</span> dataInputViewTmpl<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> DataInputView <span class=\"k\">=</span> Backbone<span class=\"k\">.</span>View<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","\t\tel<span class=\"k\">:</span> <span class=\"s\">\"#data-input\"</span><span class=\"k\">,</span>","\t\t","\t\ttemplate<span class=\"k\">:</span> _<span class=\"k\">.</span>template<span class=\"k\">(</span>dataInputViewTmpl<span class=\"k\">),</span>","\t\t ","\t\tevents<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t<span class=\"s\">\"click button.add_btn\"</span><span class=\"k\">:</span> <span class=\"s\">\"addPerson\"</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t","\t\tinitialize<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>id <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t","\t\trender<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>$el<span class=\"k\">.</span>html<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>template<span class=\"k\">());</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t","\t\taddPerson<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> name <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$el<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">\"input[name=name]\"</span><span class=\"k\">).</span>val<span class=\"k\">();</span>","\t\t\t<span class=\"k\">var</span> part <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$el<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">\"input[name=part]\"</span><span class=\"k\">).</span>val<span class=\"k\">();</span>","\t\t\t","\t\t\t<span class=\"k\">var</span> person <span class=\"k\">=</span> <span class=\"k\">new</span> Person<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t\t\t<span class=\"s\">\"id\"</span><span class=\"k\">:</span> <span class=\"k\">++</span><span class=\"k\">this</span><span class=\"k\">.</span>id<span class=\"k\">,</span>","\t\t\t\t<span class=\"s\">\"name\"</span><span class=\"k\">:</span> name<span class=\"k\">,</span>","\t\t\t\t<span class=\"s\">\"part\"</span><span class=\"k\">:</span> part","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>collection<span class=\"k\">.</span>add<span class=\"k\">(</span>person<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">return</span> DataInputView<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">);</span>",""];
_$jscoverage['view/DataInputView.js'][1]++;
define(["backbone", "model/Person", "text!template/dataInputView.tmpl"], (function (Backbone, Person, dataInputViewTmpl) {
  _$jscoverage['view/DataInputView.js'][9]++;
  var DataInputView = Backbone.View.extend({el: "#data-input", template: _.template(dataInputViewTmpl), events: {"click button.add_btn": "addPerson"}, initialize: (function () {
  _$jscoverage['view/DataInputView.js'][19]++;
  this.id = 0;
}), render: (function () {
  _$jscoverage['view/DataInputView.js'][23]++;
  this.$el.html(this.template());
  _$jscoverage['view/DataInputView.js'][24]++;
  return this;
}), addPerson: (function () {
  _$jscoverage['view/DataInputView.js'][28]++;
  var name = this.$el.find("input[name=name]").val();
  _$jscoverage['view/DataInputView.js'][29]++;
  var part = this.$el.find("input[name=part]").val();
  _$jscoverage['view/DataInputView.js'][31]++;
  var person = new Person({"id": (++this.id), "name": name, "part": part});
  _$jscoverage['view/DataInputView.js'][37]++;
  this.collection.add(person);
})});
  _$jscoverage['view/DataInputView.js'][40]++;
  return DataInputView;
}));
